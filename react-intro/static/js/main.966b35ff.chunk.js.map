{"version":3,"sources":["todoList/todosData.js","todoList/todoItem.js","todoList/App.js","memeGenerator/header.js","memeGenerator/memeGenerator.js","memeGenerator/App.js","header.js","App.js","index.js"],"names":["todosData","id","text","completed","TodoItem","props","item","toggleDone","className","type","checked","onChange","htmlFor","App","setState","prevState","todos","map","state","todoList","this","key","React","Component","Header","src","alt","MemeGenerator","componentDidMount","fetch","then","response","json","memes","data","allMemeImgs","handleChange","event","target","name","value","handleSubmit","preventDefault","randNum","Math","floor","random","length","newRandImg","url","randomImg","topText","bottomText","onSubmit","placeholder","subproject","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.966b35ff.chunk.js","sourcesContent":["const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React from 'react'\r\n\r\nfunction TodoItem(props) {\r\n\r\n    const {item, toggleDone} = props\r\n\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={item.completed}\r\n                id={item.id}\r\n                onChange={() => toggleDone(item.id)}\r\n            />\r\n\r\n            <label\r\n                htmlFor={item.id}\r\n                className={item.completed ? \"completed\" : \"\"}\r\n            >\r\n            {item.text}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport todosData from './todosData'\r\nimport TodoItem from './todoItem'\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      todos: todosData\r\n    }\r\n  }\r\n  \r\n  toggleDone = id => {\r\n    this.setState(prevState => {\r\n      const newTodos = prevState.todos.map(item => {\r\n        if (item.id === id)\r\n        return {\r\n          ...item,\r\n          completed: !item.completed\r\n        }\r\n\r\n        return item\r\n      })\r\n\r\n      return {\r\n        todos: newTodos\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {    \r\n    const todoList = this.state.todos.map(item => {\r\n      return <TodoItem\r\n                key={item.id}\r\n                item={item}\r\n                toggleDone={this.toggleDone}\r\n              />\r\n    })\r\n\r\n    return (\r\n      <div className=\"todo-list\">\r\n        {todoList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img \r\n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \r\n                alt=\"Problem?\"\r\n            />\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n\r\n                this.setState({\r\n                    allMemeImgs: memes\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const newRandImg = this.state.allMemeImgs[randNum].url\r\n\r\n        this.setState({ randomImg: newRandImg })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Top Text\"\r\n                        name=\"topText\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Bottom Text\"\r\n                        name=\"bottomText\"\r\n                        value={this.state.bottomText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <button>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImg} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react'\r\nimport Header from './header'\r\nimport MemeGenerator from './memeGenerator'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nfunction Header(props) {\r\n    const {subproject, handleChange} = props\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"subproject\"\r\n                    value=\"Todo List\"\r\n                    checked={subproject === \"Todo List\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <text>Todo List</text>\r\n            </label>\r\n\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"subproject\"\r\n                    value=\"Meme Generator\"\r\n                    checked={subproject === \"Meme Generator\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <text>Meme Generator</text>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport TodoApp from './todoList/App';\r\nimport MemeApp from './memeGenerator/App'\r\nimport Header from './header'\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n   constructor() {\r\n       super()\r\n\r\n       this.state = {\r\n           subproject: \"Todo List\"\r\n       }\r\n   }\r\n\r\n   handleChange = event => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n   }\r\n\r\n   render() {\r\n\r\n        let component\r\n\r\n        if (this.state.subproject === \"Todo List\")\r\n            component = <TodoApp />\r\n        else component = <MemeApp />\r\n\r\n        return (\r\n            <div>\r\n                <Header \r\n                    subproject={this.state.subproject}\r\n                    handleChange={this.handleChange}\r\n                />\r\n\r\n                {component}\r\n\r\n            </div>\r\n        )\r\n   }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}